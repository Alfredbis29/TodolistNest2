<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Website todo</title>
    <link href="/styles.css" rel="stylesheet">
</head>
<body class="bg-purple-50 min-h-screen">
    <div class="max-w-md mx-auto pt-12 px-4">
        <div class="bg-purple-500 rounded-t-lg p-4 flex items-center">
            <button class="text-white">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
                </svg>
            </button>
            <h1 class="text-white text-xl font-semibold ml-4">Website todo</h1>
        </div>

        <div class="bg-white rounded-b-lg shadow-lg p-6">
            <div id="todo-list" class="space-y-4">
                <!-- Todo items will be inserted here -->
            </div>

            <button id="new-task-btn" class="mt-6 bg-purple-500 text-white px-6 py-2 rounded-full flex items-center mx-auto hover:bg-purple-600 transition-colors">
                <span class="text-xl mr-1">+</span> New task
            </button>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            loadTodos();
            
            document.getElementById('new-task-btn').addEventListener('click', () => {
                const task = prompt('Enter new task:');
                if (task) {
                    createTodo(task);
                }
            });
        });

        async function loadTodos() {
            const response = await fetch('/api/todos');
            const todos = await response.json();
            renderTodos(todos);
        }

        async function createTodo(task) {
            const response = await fetch('/api/todos', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ task }),
            });
            loadTodos();
        }

        async function toggleTodo(id) {
            await fetch(`/api/todos/${id}/toggle`, { method: 'PUT' });
            loadTodos();
        }

        async function deleteTodo(id) {
            await fetch(`/api/todos/${id}`, { method: 'DELETE' });
            loadTodos();
        }

        function renderTodos(todos) {
            const todoList = document.getElementById('todo-list');
            todoList.innerHTML = todos.map(todo => `
                <div class="flex items-center group">
                    <button onclick="toggleTodo(${todo.id})" class="w-5 h-5 rounded-full border-2 border-purple-300 flex-shrink-0 ${todo.completed ? 'bg-purple-500 border-purple-500' : ''}">
                        ${todo.completed ? '<svg class="w-4 h-4 text-white mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/></svg>' : ''}
                    </button>
                    <span class="ml-3 flex-grow ${todo.completed ? 'line-through text-gray-400' : 'text-gray-600'}">${todo.task}</span>
                    <button onclick="deleteTodo(${todo.id})" class="opacity-0 group-hover:opacity-100 text-gray-400 hover:text-gray-600">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                        </svg>
                    </button>
                </div>
            `).join('');
        }
    </script>
</body>
</html> 